rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Helper function to validate image file
    function isValidImage() {
      return request.resource.contentType.matches('image/.*') && 
        request.resource.size < 5 * 1024 * 1024;
    }
    
    // User profile photos
    match /users/{userId}/{fileName} {
      // Anyone can read profile photos
      allow read: if true;
      
      // Users can upload their own photos, admins can upload for anyone
      allow create: if request.auth != null && 
        (request.auth.uid == userId || isAdmin()) && 
        isValidImage();
      
      // Users can update their own photos, admins can update anyone's
      allow update: if request.auth != null && 
        (request.auth.uid == userId || isAdmin()) && 
        isValidImage();
      
      // Users can delete their own photos, admins can delete anyone's
      allow delete: if request.auth != null && 
        (request.auth.uid == userId || isAdmin());
    }
    
    // Gym logos and general images (admin only)
    match /gym/{allPaths=**} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Workout videos/files (future feature)
    match /workouts/{workoutId}/{fileName} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
  }
}
