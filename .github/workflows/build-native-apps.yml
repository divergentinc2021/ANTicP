name: Build Native Apps

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allow manual trigger

jobs:
  # Build Android APK
  build-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v3

    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: ☕ Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: 🤖 Setup Android SDK
      uses: android-actions/setup-android@v2

    - name: 📦 Install dependencies
      run: |
        npm ci || npm install
        npm install -g @capacitor/cli
        npm install @capacitor/core @capacitor/android
        npm install @capacitor-community/bluetooth-le

    - name: 🔨 Initialize Capacitor
      run: |
        npx cap init "ANTicP Trainer" com.anticip.trainer --web-dir=.
        npx cap add android

    - name: 📝 Configure Android permissions
      run: |
        cat > android/app/src/main/AndroidManifest.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <manifest xmlns:android="http://schemas.android.com/apk/res/android"
            package="com.anticip.trainer">

            <uses-permission android:name="android.permission.INTERNET" />
            <uses-permission android:name="android.permission.BLUETOOTH" />
            <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" />
            <uses-permission android:name="android.permission.BLUETOOTH_SCAN" />
            <uses-permission android:name="android.permission.BLUETOOTH_CONNECT" />
            <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
            <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />

            <application
                android:allowBackup="true"
                android:icon="@mipmap/ic_launcher"
                android:label="@string/app_name"
                android:roundIcon="@mipmap/ic_launcher_round"
                android:supportsRtl="true"
                android:theme="@style/AppTheme">

                <activity
                    android:configChanges="orientation|keyboardHidden|keyboard|screenSize|locale|smallestScreenSize|screenLayout|uiMode"
                    android:name="com.getcapacitor.BridgeActivity"
                    android:label="@string/title_activity_main"
                    android:theme="@style/AppTheme.NoActionBarLaunch"
                    android:launchMode="singleTask"
                    android:exported="true">

                    <intent-filter>
                        <action android:name="android.intent.action.MAIN" />
                        <category android:name="android.intent.category.LAUNCHER" />
                    </intent-filter>
                </activity>

                <provider
                    android:name="com.getcapacitor.BridgeFileProvider"
                    android:authorities="${applicationId}.fileprovider"
                    android:exported="false"
                    android:grantUriPermissions="true">
                    <meta-data
                        android:name="android.support.FILE_PROVIDER_PATHS"
                        android:resource="@xml/file_paths"></meta-data>
                </provider>
            </application>
        </manifest>
        EOF

    - name: 🔄 Sync Capacitor
      run: npx cap sync android

    - name: 🏗️ Build Android Debug APK
      run: |
        cd android
        chmod +x ./gradlew
        ./gradlew assembleDebug

    - name: 📤 Upload Android APK
      uses: actions/upload-artifact@v3
      with:
        name: android-apk-debug
        path: android/app/build/outputs/apk/debug/app-debug.apk

    - name: 🏗️ Build Android Release APK (unsigned)
      run: |
        cd android
        ./gradlew assembleRelease

    - name: 📤 Upload Android Release APK
      uses: actions/upload-artifact@v3
      with:
        name: android-apk-release-unsigned
        path: android/app/build/outputs/apk/release/app-release-unsigned.apk

  # Build iOS (requires macOS runner)
  build-ios:
    runs-on: macos-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v3

    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: 📦 Install dependencies
      run: |
        npm ci || npm install
        npm install -g @capacitor/cli
        npm install @capacitor/core @capacitor/ios
        npm install @capacitor-community/bluetooth-le

    - name: 🔨 Initialize Capacitor
      run: |
        npx cap init "ANTicP Trainer" com.anticip.trainer --web-dir=.
        npx cap add ios

    - name: 📝 Configure iOS permissions
      run: |
        /usr/libexec/PlistBuddy -c "Add :NSBluetoothAlwaysUsageDescription string 'This app needs Bluetooth to connect to your KICKR trainer and Zwift Click'" ios/App/App/Info.plist || true
        /usr/libexec/PlistBuddy -c "Add :NSBluetoothPeripheralUsageDescription string 'This app needs Bluetooth to connect to training equipment'" ios/App/App/Info.plist || true

    - name: 🔄 Sync Capacitor
      run: npx cap sync ios

    - name: 📱 Install CocoaPods
      run: |
        cd ios/App
        pod install

    - name: 🏗️ Build iOS App (Archive)
      run: |
        cd ios/App
        xcodebuild -workspace App.xcworkspace \
          -scheme App \
          -configuration Release \
          -archivePath build/ANTicP.xcarchive \
          -allowProvisioningUpdates \
          archive \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO

    - name: 📦 Export iOS App
      run: |
        cd ios/App
        xcodebuild -exportArchive \
          -archivePath build/ANTicP.xcarchive \
          -exportPath build \
          -exportOptionsPlist ../../.github/workflows/export-options.plist \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO

    - name: 📤 Upload iOS Build
      uses: actions/upload-artifact@v3
      with:
        name: ios-app-archive
        path: ios/App/build/ANTicP.xcarchive

  # Build Web App as PWA
  build-pwa:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v3

    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: 🎨 Create PWA icons
      run: |
        # Create placeholder icons (replace with your actual icons)
        mkdir -p pwa
        echo '<svg xmlns="http://www.w3.org/2000/svg" width="192" height="192"><rect width="192" height="192" fill="#fc5200"/><text x="50%" y="50%" text-anchor="middle" dy=".3em" fill="white" font-size="100">🚴</text></svg>' > icon-192.png
        echo '<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512"><rect width="512" height="512" fill="#fc5200"/><text x="50%" y="50%" text-anchor="middle" dy=".3em" fill="white" font-size="250">🚴</text></svg>' > icon-512.png

    - name: 📦 Create service worker
      run: |
        cat > sw.js << 'EOF'
        const CACHE_NAME = 'anticip-v1';
        const urlsToCache = [
          '/',
          '/index.html',
          '/manifest.json',
          '/icon-192.png',
          '/icon-512.png'
        ];

        self.addEventListener('install', event => {
          event.waitUntil(
            caches.open(CACHE_NAME)
              .then(cache => cache.addAll(urlsToCache))
          );
        });

        self.addEventListener('fetch', event => {
          event.respondWith(
            caches.match(event.request)
              .then(response => response || fetch(event.request))
          );
        });
        EOF

    - name: 📝 Add PWA support to HTML
      run: |
        # Add PWA meta tags and service worker registration
        sed -i '/<\/head>/i \    <link rel="manifest" href="/manifest.json">\n    <meta name="theme-color" content="#fc5200">\n    <link rel="apple-touch-icon" href="/icon-192.png">' index*.html || true
        
        # Add service worker registration
        sed -i '/<\/body>/i \    <script>\n    if ("serviceWorker" in navigator) {\n        navigator.serviceWorker.register("/sw.js");\n    }\n    </script>' index*.html || true

    - name: 📦 Package PWA
      run: |
        mkdir -p dist
        cp index*.html dist/
        cp manifest.json dist/ || echo '{}' > dist/manifest.json
        cp icon-*.png dist/ || true
        cp sw.js dist/
        cp -r css dist/ || true
        cp -r js dist/ || true

    - name: 📤 Upload PWA
      uses: actions/upload-artifact@v3
      with:
        name: pwa-app
        path: dist/

    - name: 🚀 Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist

  # Create Release
  create-release:
    needs: [build-android, build-ios, build-pwa]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
    - name: 📥 Download artifacts
      uses: actions/download-artifact@v3
      
    - name: 📅 Get current date
      id: date
      run: echo "date=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT

    - name: 🏷️ Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.date.outputs.date }}
        release_name: ANTicP Release ${{ steps.date.outputs.date }}
        body: |
          ## 🚴 ANTicP Training Platform
          
          ### 📱 Downloads:
          - **Android:** Download the APK file and install on your device
          - **iOS:** Requires Xcode to install (see instructions below)
          - **Web PWA:** Visit the GitHub Pages site
          
          ### 🔧 Installation:
          
          **Android:**
          1. Download `anticip-debug.apk`
          2. Enable "Install from unknown sources" in settings
          3. Open the APK file to install
          
          **iOS:**
          1. Download the iOS archive
          2. Open in Xcode
          3. Sign with your Apple ID
          4. Install to device
          
          ### ✨ Features:
          - Zone-based training (8 zones)
          - Zwift Click button controls
          - Interval training support
          - Live metrics display
          - Session recording & export
        draft: false
        prerelease: false

    - name: 📤 Upload Android APK to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./android-apk-debug/app-debug.apk
        asset_name: anticip-debug.apk
        asset_content_type: application/vnd.android.package-archive