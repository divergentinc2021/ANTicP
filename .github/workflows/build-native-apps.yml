name: Build Apps

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: '18'
    - uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    - name: Build Android
      run: |
        # Create package.json
        echo '{"name":"anticip","version":"1.0.0"}' > package.json
        
        # Install dependencies
        npm install @capacitor/core @capacitor/android @capacitor/cli
        
        # Ensure we have an HTML file
        if [ ! -f index.html ]; then
          if [ -f integrated-training-platform.html ]; then
            cp integrated-training-platform.html index.html
          else
            echo '<!DOCTYPE html><html><head><meta charset="UTF-8"><title>ANTicP</title></head><body><h1>ANTicP Trainer</h1></body></html>' > index.html
          fi
        fi
        
        # Initialize Capacitor
        npx cap init "ANTicP" com.anticip.trainer --web-dir=.
        npx cap add android
        npx cap sync android
        
        # Build APK
        cd android
        chmod +x ./gradlew
        ./gradlew assembleDebug
        
        # Find and display APK
        echo "Looking for APK..."
        find . -name "*.apk" -type f
        
    - uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: android/app/build/outputs/apk/debug/app-debug.apk
        if-no-files-found: error

  build-ios:
    runs-on: macos-15
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: '18'
    - name: Build iOS
      run: |
        set +e
        echo '{"name":"anticip","version":"1.0.0"}' > package.json
        npm install @capacitor/core @capacitor/ios @capacitor/cli || true
        
        if [ ! -f index.html ]; then
          if [ -f integrated-training-platform.html ]; then
            cp integrated-training-platform.html index.html
          else
            echo '<!DOCTYPE html><html><body>ANTicP</body></html>' > index.html
          fi
        fi
        
        npx cap init "ANTicP" com.anticip.trainer --web-dir=. || true
        npx cap add ios || true
        npx cap sync ios || true
        
        if [ -d ios/App ]; then
          cd ios/App
          pod install || true
          xcodebuild -workspace App.xcworkspace \
            -scheme App \
            -configuration Release \
            -archivePath build/ANTicP.xcarchive \
            archive \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO || true
        fi
        exit 0
        
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ios-output
        path: ios/

  build-pwa:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - run: |
        mkdir -p dist
        cp *.html dist/ 2>/dev/null || echo '<!DOCTYPE html><html><body>ANTicP</body></html>' > dist/index.html
        cp manifest.json dist/ 2>/dev/null || echo '{"name":"ANTicP","short_name":"ANTicP","start_url":"/"}' > dist/manifest.json
        cp -r css dist/ 2>/dev/null || true
        cp -r js dist/ 2>/dev/null || true
    - uses: actions/upload-artifact@v4
      with:
        name: pwa
        path: dist/
    - uses: peaceiris/actions-gh-pages@v4
      if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist