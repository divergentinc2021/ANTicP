name: Build Apps

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: '18'
    - uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    - run: |
        # Create package.json
        echo '{"name":"anticip","version":"1.0.0"}' > package.json
        
        # Install dependencies
        npm install @capacitor/core @capacitor/android @capacitor/cli
        
        # Create index.html if missing
        if [ ! -f index.html ]; then
          cp integrated-training-platform.html index.html 2>/dev/null || \
          cp index-advanced-zones.html index.html 2>/dev/null || \
          echo '<!DOCTYPE html><html><body>ANTicP</body></html>' > index.html
        fi
        
        # Initialize Capacitor
        npx cap init "ANTicP" com.anticip.trainer --web-dir=.
        npx cap add android
        
        # Sync files
        npx cap sync android
        
        # Try to build
        cd android
        chmod +x ./gradlew
        ./gradlew assembleDebug || echo "Build failed, checking structure..."
        
        # Check what was created
        find . -name "*.apk" 2>/dev/null || echo "No APK found"
        
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: android-output
        path: android/

  build-ios:
    runs-on: macos-15
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: '18'
    - run: |
        # Create package.json
        echo '{"name":"anticip","version":"1.0.0"}' > package.json
        
        # Install dependencies
        npm install @capacitor/core @capacitor/ios @capacitor/cli
        
        # Create index.html if missing
        if [ ! -f index.html ]; then
          cp integrated-training-platform.html index.html 2>/dev/null || \
          cp index-advanced-zones.html index.html 2>/dev/null || \
          echo '<!DOCTYPE html><html><body>ANTicP</body></html>' > index.html
        fi
        
        # Initialize Capacitor
        npx cap init "ANTicP" com.anticip.trainer --web-dir=.
        npx cap add ios
        
        # Sync files
        npx cap sync ios
        
        # Install pods
        cd ios/App
        pod install || echo "Pod install failed"
        
        # Try to build
        xcodebuild -workspace App.xcworkspace \
          -scheme App \
          -configuration Release \
          -archivePath build/ANTicP.xcarchive \
          archive \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO || echo "Build failed"
        
        # Check what was created
        ls -la build/ 2>/dev/null || echo "No build dir"
        
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ios-output
        path: ios/

  build-pwa:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - run: |
        mkdir -p dist
        cp *.html dist/ 2>/dev/null || echo '<!DOCTYPE html><html><body>ANTicP</body></html>' > dist/index.html
        cp manifest.json dist/ 2>/dev/null || echo '{"name":"ANTicP","short_name":"ANTicP","start_url":"/"}' > dist/manifest.json
        cp -r css dist/ 2>/dev/null || true
        cp -r js dist/ 2>/dev/null || true
    - uses: actions/upload-artifact@v4
      with:
        name: pwa
        path: dist/
    - uses: peaceiris/actions-gh-pages@v4
      if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist