name: ANT+ Bridge Build and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  PYTHON_VERSION: '3.9'

jobs:
  # Build downloadable packages only (no deployment conflicts)
  build-packages:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install dependencies
      run: |
        npm install
        pip install pyserial pyinstaller
    
    - name: Create platform-specific package
      run: |
        mkdir -p dist/${{ matrix.os }}
        cp ant-bridge-server.js dist/${{ matrix.os }}/
        cp package.json dist/${{ matrix.os }}/
        cp README.md dist/${{ matrix.os }}/
    
    - name: Create Windows installer (Windows only)
      if: matrix.os == 'windows-latest'
      run: |
        echo '@echo off' > dist/${{ matrix.os }}/setup.bat
        echo 'echo Installing ANT+ Bridge...' >> dist/${{ matrix.os }}/setup.bat
        echo 'npm install' >> dist/${{ matrix.os }}/setup.bat
        echo 'pip install pyserial' >> dist/${{ matrix.os }}/setup.bat
        echo 'echo Setup complete! Run "npm start" to start the server.' >> dist/${{ matrix.os }}/setup.bat
        echo 'pause' >> dist/${{ matrix.os }}/setup.bat
    
    - name: Create Unix installer (Linux/Mac)
      if: matrix.os != 'windows-latest'
      run: |
        cat > dist/${{ matrix.os }}/setup.sh << 'EOF'
        #!/bin/bash
        echo "Installing ANT+ Bridge..."
        npm install
        pip install pyserial
        echo "Setup complete! Run 'npm start' to start the server."
        EOF
        chmod +x dist/${{ matrix.os }}/setup.sh
    
    - name: Create archive
      run: |
        cd dist
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          7z a ant-bridge-${{ matrix.os }}.zip ${{ matrix.os }}/*
        else
          tar -czf ant-bridge-${{ matrix.os }}.tar.gz ${{ matrix.os }}/*
        fi
    
    - name: Upload package artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ant-bridge-${{ matrix.os }}
        path: dist/ant-bridge-${{ matrix.os }}.*

  # Update deployment info for your existing Railway deployment
  update-deployment-info:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Create deployment info for GitHub Pages
      run: |
        mkdir -p _data
        cat > _data/deployment.json << EOF
        {
          "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
          "version": "v${{ github.run_number }}",
          "railway_deployment": {
            "url": "https://web-production-f8ebc.up.railway.app",
            "websocket": "wss://web-production-f8ebc.up.railway.app",
            "status": "deployed",
            "platform": "railway"
          },
          "local_bridge": {
            "websocket": "ws://localhost:8888",
            "platforms": ["windows", "linux", "macos"]
          },
          "test_pages": {
            "railway_bridge": "your-railway-bridge.html",
            "local_bridge": "ant-bridge-client.html",
            "config_checker": "railway-config-checker.html"
          }
        }
        EOF
    
    - name: Create deployment status page
      run: |
        cat > deployment-status.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
            <title>ANT+ Bridge Deployment Status</title>
            <style>
                body { font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; }
                .status-good { color: #28a745; }
                .status-warning { color: #ffc107; }
                .deployment-card { background: #f8f9fa; padding: 20px; margin: 20px 0; border-radius: 8px; }
                .btn { background: #007bff; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px; display: inline-block; margin: 5px; }
            </style>
        </head>
        <body>
            <h1>🚂 ANT+ Bridge Deployment Status</h1>
            
            <div class="deployment-card">
                <h2>🌐 Railway Cloud Deployment</h2>
                <p><strong>Status:</strong> <span class="status-good">✅ Live</span></p>
                <p><strong>URL:</strong> <a href="https://web-production-f8ebc.up.railway.app">web-production-f8ebc.up.railway.app</a></p>
                <p><strong>WebSocket:</strong> wss://web-production-f8ebc.up.railway.app</p>
                <p><strong>Features:</strong> Global access, demo data, interface testing</p>
                <a href="your-railway-bridge.html" class="btn">🚂 Test Railway Bridge</a>
            </div>
            
            <div class="deployment-card">
                <h2>🏠 Local Bridge Setup</h2>
                <p><strong>Status:</strong> <span class="status-warning">⚙️ Manual Setup Required</span></p>
                <p><strong>WebSocket:</strong> ws://localhost:8888</p>
                <p><strong>Features:</strong> Real ANT+ device access, all transfer rates</p>
                <a href="#downloads" class="btn">📦 Download Local Bridge</a>
                <a href="ant-bridge-client.html" class="btn">🏠 Test Local Bridge</a>
            </div>
            
            <div class="deployment-card">
                <h2>🔧 Configuration Tools</h2>
                <a href="railway-config-checker.html" class="btn">🔍 Railway Config Checker</a>
                <a href="ant-bridge-automator.html" class="btn">🤖 Bridge Automator</a>
            </div>
            
            <div id="downloads">
                <h2>📦 Download Local Bridge</h2>
                <p>Download the bridge server to run on your computer with ANT+ USB device:</p>
                <div id="download-links">
                    <p>Latest release downloads will be available after GitHub Actions completes.</p>
                </div>
            </div>
            
            <script>
                // Auto-update download links from GitHub releases
                const repoPath = window.location.pathname.split('/').slice(1, 3).join('/');
                fetch(`https://api.github.com/repos/${repoPath}/releases/latest`)
                .then(response => response.json())
                .then(data => {
                    const downloadsDiv = document.getElementById('download-links');
                    if (data.assets && data.assets.length > 0) {
                        let html = '<h4>Available Downloads:</h4>';
                        data.assets.forEach(asset => {
                            html += `<a href="${asset.browser_download_url}" class="btn">📱 ${asset.name}</a>`;
                        });
                        downloadsDiv.innerHTML = html;
                    } else {
                        downloadsDiv.innerHTML = '<p>No releases available yet. Check back after first deployment.</p>';
                    }
                })
                .catch(() => {
                    document.getElementById('download-links').innerHTML = '<p>Visit the <a href="../../releases">Releases page</a> for downloads.</p>';
                });
            </script>
        </body>
        </html>
        EOF
    
    - name: Update GitHub Pages with deployment info
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: .
        destination_dir: .
        keep_files: true

  # Create GitHub release with packages (no deployment conflicts)
  create-release:
    needs: [build-packages]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: ANT+ Bridge v${{ github.run_number }}
        body: |
          ## ANT+ Middleware Bridge Release
          
          ### 🚂 Railway Cloud Deployment
          **Live at:** https://web-production-f8ebc.up.railway.app  
          **WebSocket:** wss://web-production-f8ebc.up.railway.app  
          **Test Page:** [Railway Bridge Test](https://your-username.github.io/your-repo/your-railway-bridge.html)
          
          ### 📦 Local Bridge Downloads
          For computers with ANT+ USB devices:
          
          ### 🎯 Quick Start
          1. **Test Railway Bridge:** Use the cloud deployment for interface testing
          2. **Download Local Bridge:** For real ANT+ device access
          3. **Setup Instructions:** Extract and run setup script
          
          ### ✨ Features
          - ✅ All 5 ANT+ transfer rates (50K - 3MHz)
          - ✅ Real-time device data streaming  
          - ✅ Cloud and local deployment options
          - ✅ Cross-platform compatibility
          - ✅ WebSocket-based communication
        draft: false
        prerelease: false
    
    - name: Upload Windows Package
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/ant-bridge-windows-latest/ant-bridge-windows-latest.zip
        asset_name: ant-bridge-windows.zip
        asset_content_type: application/zip
    
    - name: Upload Linux Package
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/ant-bridge-ubuntu-latest/ant-bridge-ubuntu-latest.tar.gz
        asset_name: ant-bridge-linux.tar.gz
        asset_content_type: application/gzip
    
    - name: Upload macOS Package
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/ant-bridge-macos-latest/ant-bridge-macos-latest.tar.gz
        asset_name: ant-bridge-macos.tar.gz
        asset_content_type: application/gzip
